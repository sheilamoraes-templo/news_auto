@echo off
chcp 65001 >nul
echo ========================================
echo  AGENDADOR DE TAREFAS DO WINDOWS
echo ========================================
echo.
echo Este script configura o agendamento autom√°tico
echo do sistema de coleta de not√≠cias no Windows.
echo.

REM Verificar se est√° rodando como administrador
net session >nul 2>&1
if %errorLevel% neq 0 (
    echo ‚ùå ERRO: Este script precisa ser executado como Administrador!
    echo.
    echo Para executar como administrador:
    echo 1. Clique com o bot√£o direito no arquivo
    echo 2. Selecione "Executar como administrador"
    echo.
    pause
    exit /b 1
)

echo ‚úÖ Executando como administrador
echo.

REM Obter o diret√≥rio atual
set "CURRENT_DIR=%~dp0"
set "PYTHON_SCRIPT=%CURRENT_DIR%main.py"
set "TASK_NAME=Coleta_Automatica_Noticias"
set "TASK_DESCRIPTION=Sistema automatizado de coleta de not√≠cias sobre tecnologia e inova√ß√£o"

echo üìç Diret√≥rio atual: %CURRENT_DIR%
echo üêç Script Python: %PYTHON_SCRIPT%
echo üìÖ Nome da tarefa: %TASK_NAME%
echo.

REM Verificar se o script Python existe
if not exist "%PYTHON_SCRIPT%" (
    echo ‚ùå ERRO: Arquivo main.py n√£o encontrado em %CURRENT_DIR%
    echo.
    pause
    exit /b 1
)

echo ‚úÖ Arquivo main.py encontrado
echo.

REM Verificar se Python est√° instalado
python --version >nul 2>&1
if %errorLevel% neq 0 (
    echo ‚ùå ERRO: Python n√£o est√° instalado ou n√£o est√° no PATH
    echo.
    echo Solu√ß√µes:
    echo 1. Instale o Python de https://python.org
    echo 2. Adicione Python ao PATH durante a instala√ß√£o
    echo 3. Reinicie o terminal ap√≥s a instala√ß√£o
    echo.
    pause
    exit /b 1
)

echo ‚úÖ Python encontrado
python --version
echo.

REM Verificar se as depend√™ncias est√£o instaladas
echo üì¶ Verificando depend√™ncias...
cd /d "%CURRENT_DIR%"
pip install -r requirements.txt >nul 2>&1
if %errorLevel% neq 0 (
    echo ‚ö†Ô∏è  AVISO: Erro ao instalar depend√™ncias
    echo Execute manualmente: pip install -r requirements.txt
    echo.
)

echo ‚úÖ Depend√™ncias verificadas
echo.

REM Criar diret√≥rios necess√°rios
if not exist "output" mkdir output
if not exist "logs" mkdir logs
if not exist "data" mkdir data

echo ‚úÖ Diret√≥rios criados/verificados
echo.

REM Remover tarefa existente se houver
echo üóëÔ∏è  Removendo tarefa existente (se houver)...
schtasks /delete /tn "%TASK_NAME%" /f >nul 2>&1

REM Criar nova tarefa
echo üìÖ Criando nova tarefa agendada...
schtasks /create /tn "%TASK_NAME%" /tr "python \"%CURRENT_DIR%coleta_agendada.py\"" /sc daily /st 12:00 /ru "SYSTEM" /f

if %errorLevel% equ 0 (
    echo ‚úÖ Tarefa criada com sucesso!
    echo.
    echo üìã Detalhes da tarefa:
    echo    Nome: %TASK_NAME%
    echo    Descri√ß√£o: %TASK_DESCRIPTION%
    echo    Execu√ß√£o: Diariamente √†s 12:00
    echo    Script: %PYTHON_SCRIPT%
    echo.
    echo üîß Para modificar o agendamento:
    echo    1. Abra "Agendador de Tarefas" (taskschd.msc)
    echo    2. Procure por "%TASK_NAME%"
    echo    3. Clique com bot√£o direito e selecione "Propriedades"
    echo.
    echo üöÄ Para executar manualmente:
    echo    schtasks /run /tn "%TASK_NAME%"
    echo.
    echo üìä Para ver o status:
    echo    schtasks /query /tn "%TASK_NAME%"
    echo.
) else (
    echo ‚ùå ERRO: Falha ao criar a tarefa
    echo.
    echo üîß Solu√ß√µes:
    echo 1. Verifique se o Windows Task Scheduler est√° funcionando
    echo 2. Execute o script como administrador
    echo 3. Verifique as permiss√µes do usu√°rio
    echo.
)

echo ========================================
echo  CONFIGURA√á√ÉO CONCLU√çDA
echo ========================================
echo.
echo üí° Pr√≥ximos passos:
echo 1. Teste o sistema: python main.py --test
echo 2. Execute manualmente: python main.py --scheduler
echo 3. Verifique os logs em: logs/
echo 4. Verifique os dados em: output/
echo.
pause
